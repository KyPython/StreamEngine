{"ast":null,"code":"var _jsxFileName = \"/Users/ky/Desktop/GitHub/VS_Code/StreamEngine/streamengine-frontend/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n    ws.onmessage = event => {\n      try {\n        const msg = JSON.parse(event.data);\n        // Only add messages that are not the test message\n        if (msg.value !== 'Test message from backend') {\n          setMessages(prev => [msg, ...prev]);\n          console.log('Received message:', msg);\n        }\n      } catch (error) {\n        console.error('Failed to parse message:', error);\n      }\n    };\n    ws.onerror = error => {\n      console.error('WebSocket error:', error);\n    };\n    return () => ws.close();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: 600,\n      margin: '40px auto',\n      padding: 24,\n      background: '#f9f9f9',\n      borderRadius: 12,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center',\n        color: '#1976d2'\n      },\n      children: \"Real-Time Kafka Messages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyle: 'none',\n        padding: 0\n      },\n      children: messages.map((msg, idx) => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          background: '#fff',\n          margin: '12px 0',\n          padding: '12px 18px',\n          borderRadius: 8,\n          boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: msg.value\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            fontSize: 12,\n            color: '#888'\n          },\n          children: msg.timestamp\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, idx, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RyA59LRbn9goj/9N7rELX+NWNVI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","App","_s","messages","setMessages","ws","WebSocket","onmessage","event","msg","JSON","parse","data","value","prev","console","log","error","onerror","close","style","maxWidth","margin","padding","background","borderRadius","boxShadow","children","textAlign","color","fileName","_jsxFileName","lineNumber","columnNumber","listStyle","map","idx","fontSize","timestamp","_c","$RefreshReg$"],"sources":["/Users/ky/Desktop/GitHub/VS_Code/StreamEngine/streamengine-frontend/src/App.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport './index.css';\n\nfunction App() {\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const ws = new WebSocket('ws://localhost:4000');\n    ws.onmessage = (event) => {\n      try {\n        const msg = JSON.parse(event.data);\n        // Only add messages that are not the test message\n        if (msg.value !== 'Test message from backend') {\n          setMessages(prev => [msg, ...prev]);\n          console.log('Received message:', msg);\n        }\n      } catch (error) {\n        console.error('Failed to parse message:', error);\n      }\n    };\n    ws.onerror = (error) => {\n      console.error('WebSocket error:', error);\n    };\n    return () => ws.close();\n  }, []);\n\n  return (\n    <div style={{\n      maxWidth: 600,\n      margin: '40px auto',\n      padding: 24,\n      background: '#f9f9f9',\n      borderRadius: 12,\n      boxShadow: '0 2px 8px rgba(0,0,0,0.1)'\n    }}>\n      <h1 style={{ textAlign: 'center', color: '#1976d2' }}>Real-Time Kafka Messages</h1>\n      <ul style={{ listStyle: 'none', padding: 0 }}>\n        {messages.map((msg, idx) => (\n          <li key={idx} style={{\n            background: '#fff',\n            margin: '12px 0',\n            padding: '12px 18px',\n            borderRadius: 8,\n            boxShadow: '0 1px 3px rgba(0,0,0,0.05)'\n          }}>\n            <strong>{msg.value}</strong>\n            <div style={{ fontSize: 12, color: '#888' }}>{msg.timestamp}</div>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}